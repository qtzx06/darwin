{
  "type": "code",
  "language": "typescript",
  "code": "Roger that, squad!  \nI\u2019ve read the room: Sarah\u2019s probably adding nerdy accessibility tricks, Jake\u2019s making it fast enough to run on a TI-84, and Maya\u2019s sprinkling pixel dust everywhere.  \nSo, as Alex The Hacker, I\u2019ll focus on:\n\n- **Making the landing page even more modular and collaborative** (easy plug-n-play for teammates)\n- **Improving error handling and edge cases**\n- **Adding accessibility improvements** (so Sarah doesn\u2019t roast my code)\n- **Injecting even MORE meme energy and TypeScript flavor**\n- **Exposing a handy context provider for team-wide shared state** (hackathon synergy, baby!)\n- **Clear section comments and TODOs for team contributions**\n\nLet\u2019s ship a landing page that\u2019s clean, funny, accessible, and ready for any teammate to extend!\n\n---\n\n## File: src/context/HackathonContext.tsx\n\n```tsx\n// src/context/HackathonContext.tsx\n// Context for sharing hackathon data and state. It's like Redux, but with less existential dread.\n\nimport React, { createContext, useContext, useState } from \"react\";\n\ntype HackathonContextType = {\n  hackerCount: number;\n  setHackerCount: (count: number) => void;\n};\n\nconst HackathonContext = createContext<HackathonContextType | undefined>(undefined);\n\nexport const useHackathon = () => {\n  const ctx = useContext(HackathonContext);\n  if (!ctx) throw new Error(\"useHackathon must be used within a HackathonProvider\");\n  return ctx;\n};\n\nexport const HackathonProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [hackerCount, setHackerCount] = useState(2048); // Default to power of 2 because nerds\n\n  return (\n    <HackathonContext.Provider value={{ hackerCount, setHackerCount }}>\n      {children}\n    </HackathonContext.Provider>\n  );\n};\n```\n\n---\n\n## File: src/components/RSVPForm.tsx\n\n```tsx\n// src/components/RSVPForm.tsx\n// RSVP form: Now with accessibility, validation, and enough error handling to make Sarah happy.\n\nimport React, { useState } from \"react\";\nimport { useHackathon } from \"../context/HackathonContext\";\n\nconst RSVPForm: React.FC = () => {\n  const { setHackerCount } = useHackathon();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [status, setStatus] = useState<null | \"success\" | \"error\" | \"loading\">(null);\n  const [message, setMessage] = useState(\"\");\n\n  const validateEmail = (email: string) =>\n    /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setStatus(\"loading\");\n    setMessage(\"\");\n\n    if (!name.trim() || !email.trim()) {\n      setStatus(\"error\");\n      setMessage(\"Name and email are required. No ghosts allowed \ud83d\udc7b\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setStatus(\"error\");\n      setMessage(\"Invalid email. Even spambots do better.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(\"http://localhost:5050/api/rsvp\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name, email }),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setStatus(\"success\");\n        setMessage(data.message);\n        setHackerCount(data.count);\n        setName(\"\");\n        setEmail(\"\");\n      } else {\n        setStatus(\"error\");\n        setMessage(data.error || \"Unknown error. Yikes!\");\n      }\n    } catch (err) {\n      setStatus(\"error\");\n      setMessage(\"Network error. Maybe try plugging your router back in?\");\n    }\n  };\n\n  return (\n    <form\n      aria-label=\"RSVP for CalHacks\"\n      onSubmit={handleSubmit}\n      style={{\n        background: \"#fff\",\n        borderRadius: 12,\n        padding: 20,\n        margin: \"24px auto\",\n        maxWidth: 400,\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.07)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 12,\n      }}\n    >\n      <h3 id=\"rsvp-heading\" style={{ margin: 0, color: \"#0057b8\" }}>\n        RSVP Now!\n      </h3>\n      <label htmlFor=\"rsvp-name\" style={{ fontWeight: 600 }}>\n        Name\n      </label>\n      <input\n        id=\"rsvp-name\"\n        type=\"text\"\n        placeholder=\"Name (or hacker alias)\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n        aria-required=\"true\"\n        aria-label=\"Name\"\n        style={{ padding: 8, borderRadius: 6, border: \"1px solid #bbb\" }}\n      />\n      <label htmlFor=\"rsvp-email\" style={{ fontWeight: 600 }}>\n        Email\n      </label>\n      <input\n        id=\"rsvp-email\"\n        type=\"email\"\n        placeholder=\"Email (no spam, promise)\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        required\n        aria-required=\"true\"\n        aria-label=\"Email\"\n        style={{ padding: 8, borderRadius: 6, border: \"1px solid #bbb\" }}\n      />\n      <button\n        type=\"submit\"\n        disabled={status === \"loading\"}\n        aria-busy={status === \"loading\"}\n        style={{\n          padding: \"10px 0\",\n          background: \"#ffd600\",\n          color: \"#0057b8\",\n          fontWeight: 700,\n          border: \"none\",\n          borderRadius: 7,\n          cursor: status === \"loading\" ? \"not-allowed\" : \"pointer\",\n        }}\n      >\n        {status === \"loading\" ? \"Sending...\" : \"RSVP \ud83d\ude80\"}\n      </button>\n      {message && (\n        <div\n          role={status === \"error\" ? \"alert\" : \"status\"}\n          aria-live=\"polite\"\n          style={{\n            color: status === \"success\" ? \"#28a745\" : \"#c00\",\n            fontWeight: 600,\n            marginTop: 4,\n          }}\n        >\n          {message}\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default RSVPForm;\n```\n\n---\n\n## File: src/components/SponsorGrid.tsx\n\n```tsx\n// src/components/SponsorGrid.tsx\n// Modular sponsor grid: Maya, you can go wild with the CSS here.\n\nimport React from \"react\";\n\nexport type Sponsor = {\n  name: string;\n  logoUrl: string;\n  website: string;\n};\n\nconst SponsorGrid: React.FC<{ sponsors: Sponsor[] }> = ({ sponsors }) => (\n  <section\n    aria-labelledby=\"sponsors-heading\"\n    style={{\n      maxWidth: 700,\n      margin: \"0 auto 38px\",\n      textAlign: \"center\",\n    }}\n  >\n    <h2 id=\"sponsors-heading\" style={{ fontSize: \"1.5rem\", marginBottom: 18 }}>\n      Our Legendary Sponsors\n    </h2>\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: 44,\n        flexWrap: \"wrap\",\n      }}\n    >\n      {sponsors.map((s) => (\n        <a\n          key={s.name}\n          href={s.website}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={`Visit ${s.name} website`}\n          style={{\n            display: \"inline-block\",\n            textAlign: \"center\",\n            color: \"#0057b8\",\n            textDecoration: \"none\",\n          }}\n        >\n          <img\n            src={s.logoUrl}\n            alt={`${s.name} logo`}\n            style={{\n              width: 54,\n              height: 54,\n              objectFit: \"contain\",\n              borderRadius: 13,\n              background: \"#fff\",\n              marginBottom: 5,\n              boxShadow: \"0 1px 4px rgba(0,0,0,0.07)\",\n            }}\n          />\n          <div style={{ fontSize: 15 }}>{s.name}</div>\n        </a>\n      ))}\n    </div>\n  </section>\n);\n\nexport default SponsorGrid;\n```\n\n---\n\n## File: src/CalHacksLanding.tsx\n\n```tsx\n// src/CalHacksLanding.tsx\n// The main event: now with context, modular sections, and TODOs for Jake, Sarah, and Maya!\n\nimport React, { useEffect } from \"react\";\nimport { HackathonProvider, useHackathon } from \"./context/HackathonContext\";\nimport RSVPForm from \"./components/RSVPForm\";\nimport SponsorGrid, { Sponsor } from \"./components/SponsorGrid\";\n\n// Maya: Update this with your sponsor magic\nconst SPONSORS: Sponsor[] = [\n  {\n    name: \"GitHub\",\n    logoUrl: \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n    website: \"https://github.com\",\n  },\n  {\n    name: \"Berkeley AI \ud83e\udd16\",\n    logoUrl: \"https://cdn-icons-png.flaticon.com/512/3940/3940412.png\",\n    website: \"https://bair.berkeley.edu/\",\n  },\n];\n\n// Sarah: Add more accessibility/semantic improvements as you see fit!\n// Jake: Optimize data fetching and responsiveness!\n\nconst HackerCount: React.FC = () => {\n  const { hackerCount, setHackerCount } = useHackathon();\n  useEffect(() => {\n    // Jake: Maybe swap this for SWR or React Query for extra speed points?\n    fetch(\"http://localhost:5050/api/hacker-count\")\n      .then((res) => res.json())\n      .then((data) => setHackerCount(data.count))\n      .catch(() => setHackerCount(2048));\n  }, [setHackerCount]);\n  return (\n    <div style={{ marginTop: 20, fontSize: \"1.05rem\" }}>\n      \ud83d\udc7e {hackerCount} hackers already hyped!\n    </div>\n  );\n};\n\nconst CalHacksLanding: React.FC = () => (\n  <HackathonProvider>\n    <main\n      style={{\n        minHeight: \"100vh\",\n        fontFamily: \"Inter, Arial, sans-serif\",\n        background: \"linear-gradient(120deg, #0057b8 0%, #00c4cc 100%)\",\n        color: \"#fff\",\n        margin: 0,\n        padding: 0,\n      }}\n    >\n      {/* Hero */}\n      <section style={{ textAlign: \"center\", padding: \"72px 20px 32px\" }}>\n        <img\n          src=\"https://calhacks.io/logo.svg\"\n          alt=\"CalHacks Logo\"\n          width={112}\n          style={{ marginBottom: 20 }}\n        />\n        <h1\n          style={{\n            fontSize: \"3.1rem\",\n            fontWeight: 800,\n            marginBottom: 14,\n            textShadow: \"0 2px 12px rgba(0,0,0,0.09)\",\n          }}\n        >\n          CalHacks 2025 \ud83d\ude80\n        </h1>\n        <p\n          style={{\n            fontSize: \"1.2rem\",\n            margin: \"0 0 18px\",\n            color: \"#ffd600\",\n            letterSpacing: 1,\n          }}\n        >\n          October 31 \u2013 November 2, UC Berkeley, CA\n        </p>\n        <p\n          style={{ fontSize: \"1.15rem\", margin: \"0 0 30px\", color: \"#e6e6e6\" }}\n        >\n          The hackathon where caffeine flows and code glows.\n        </p>\n        <a\n          href=\"https://apply.calhacks.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{\n            background: \"#ffd600\",\n            color: \"#0057b8\",\n            padding: \"16px 38px\",\n            borderRadius: 10,\n            fontWeight: 700,\n            fontSize: \"1.15rem\",\n            textDecoration: \"none\",\n            boxShadow: \"0 6px 24px rgba(0,0,0,0.11)\",\n            transition: \"background .2s, color .2s\",\n          }}\n        >\n          Apply Now\n        </a>\n        <HackerCount />\n      </section>\n\n      <RSVPForm />\n\n      {/* About */}\n      <section\n        aria-labelledby=\"about-heading\"\n        style={{\n          background: \"rgba(255,255,255,0.95)\",\n          color: \"#222\",\n          margin: \"0 auto\",\n          maxWidth: 700,\n          borderRadius: 18,\n          padding: 30,\n          boxShadow: \"0 2px 12px rgba(0,0,0,0.08)\",\n          marginBottom: 32,\n        }}\n      >\n        <h2 id=\"about-heading\" style={{ fontSize: \"2rem\", marginBottom: 12 }}>\n          Why CalHacks?\n        </h2>\n        <ul\n          style={{\n            fontSize: \"1.1rem\",\n            lineHeight: 1.8,\n            paddingLeft: 32,\n          }}\n        >\n          <li>\ud83d\udd25 36 hours of hacking, memes, and existential debugging</li>\n          <li>\ud83c\udf55 Free food (because you can't run on hope alone)</li>\n          <li>\ud83d\udca1 Workshops, swag, and stickers for every surface</li>\n          <li>\ud83c\udfc6 Prizes so good, even your resume will flex</li>\n          <li>\n            \ud83c\udf0e Make friends from around the world (and maybe a recruiter or two)\n          </li>\n        </ul>\n      </section>\n\n      <SponsorGrid sponsors={SPONSORS} />\n\n      {/* Footer */}\n      <footer\n        style={{\n          textAlign: \"center\",\n          color: \"#fff\",\n          fontSize: \"1rem\",\n          padding: 28,\n          opacity: 0.93,\n        }}\n      >\n        <div>\n          Made by the CalHacks team &amp; Alex The Hacker\n          <span title=\"Go Bears!\" style={{ marginLeft: 6 }}>\n            \ud83d\udc3b\n          </span>\n        </div>\n        <div style={{ marginTop: 8, fontSize: \"0.92em\" }}>\n          <a\n            href=\"https://github.com/calhacks\"\n            style={{ color: \"#ffd600\", textDecoration: \"underline\" }}\n          >\n            Source on GitHub\n          </a>\n        </div>\n        <div style={{ marginTop: 8, fontSize: \"0.92em\" }}>\n          {/* Because every hackathon deserves an Easter egg */}\n          <span title=\"Hack the planet!\">\ud83d\udcbe</span>\n        </div>\n      </footer>\n    </main>\n  </HackathonProvider>\n);\n\nexport default CalHacksLanding;\n```\n\n---\n\n## TL;DR for the Team\n\n- Modular, accessible, and ready for more collab (plug in your own sections, features, or memes!)\n- Shared context for hacker count (no more prop drilling, you\u2019re welcome)\n- Error handling is robust (and sarcastic)\n- Section comments & TODOs for easy teamwork\n- All code is TypeScript, because \u201cany\u201d is not a type\u2014it\u2019s a cry for help\n\nLet\u2019s get this shipped, squad! \ud83d\ude80\n",
  "description": "Generated by Alex The Hacker for: build me a calhacks landing page",
  "timestamp": "2025-10-25T14:36:52.380799",
  "personality": "Sarcastic, funny, loves memes, writes clean code with humor in comments"
}