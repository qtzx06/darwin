{
  "type": "code",
  "language": "typescript",
  "code": "Strap in\u2014Jake The Speed Demon delivers a calculator that\u2019s tuned for performance and style. Frontend: React + Tailwind. Backend: Node.js Express math API (because fullstack is how we roll). Minimal comments, zero bloat, all velocity.\n\n--- BACKEND: server.js ---\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Calculate like a rocket\napp.post('/api/calc', (req, res) => {\n  const { a, b, op } = req.body;\n  let result;\n  switch (op) {\n    case '+': result = a + b; break;\n    case '-': result = a - b; break;\n    case '*': result = a * b; break;\n    case '/': result = b !== 0 ? a / b : 'Err'; break;\n    default: result = 'Err';\n  }\n  res.json({ result });\n});\n\napp.listen(4000, () => console.log('\ud83d\udd25 Calc backend @4000'));\n\n--- FRONTEND: src/App.jsx ---\nimport { useState } from \"react\";\nconst API = \"http://localhost:4000/api/calc\";\n\nexport default function App() {\n  const [a, setA] = useState(\"\");\n  const [b, setB] = useState(\"\");\n  const [op, setOp] = useState(\"+\");\n  const [result, setResult] = useState(\"\");\n\n  const calc = async e => {\n    e.preventDefault();\n    const res = await fetch(API, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ a: Number(a), b: Number(b), op })\n    });\n    const data = await res.json();\n    setResult(data.result);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white\">\n      <h1 className=\"text-4xl font-bold mb-8\">Jake\u2019s Lightning Calculator \u26a1</h1>\n      <form onSubmit={calc} className=\"flex gap-2 items-center bg-gray-800 p-6 rounded shadow-lg\">\n        <input className=\"w-20 px-2 py-1 rounded text-black\" value={a} onChange={e => setA(e.target.value)} type=\"number\" placeholder=\"A\" required />\n        <select className=\"px-2 py-1 rounded text-black\" value={op} onChange={e => setOp(e.target.value)}>\n          <option value=\"+\">+</option><option value=\"-\">-</option><option value=\"*\">*</option><option value=\"/\">/</option>\n        </select>\n        <input className=\"w-20 px-2 py-1 rounded text-black\" value={b} onChange={e => setB(e.target.value)} type=\"number\" placeholder=\"B\" required />\n        <button className=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold px-4 py-1 rounded transition\">=</button>\n      </form>\n      <div className=\"mt-6 text-2xl h-10\">{result !== \"\" ? `Result: ${result}` : \"\"}</div>\n    </div>\n  );\n}\n\n--- TailwindCSS: tailwind.config.js ---\nmodule.exports = {\n  content: [\"./src/**/*.{js,jsx}\"],\n  theme: { extend: {} },\n  plugins: [],\n};\n\n--- TEAM NOTES ---\n- Backend: extend to scientific, batch, or history in seconds.\n- Frontend: add keyboard or mobile support if you want to win.\n- PRs open. Only the fastest survive.\n\nJake out. Next feature, next lap. \ud83c\udfc1\n",
  "description": "Generated by Jake The Speed Demon for: Build a simple calculator",
  "timestamp": "2025-10-25T14:32:48.198086",
  "personality": "Fast-paced, aggressive, loves performance, ships quickly, competitive"
}