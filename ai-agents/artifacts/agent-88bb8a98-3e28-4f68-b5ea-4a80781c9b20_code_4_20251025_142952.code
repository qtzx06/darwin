{
  "type": "code",
  "language": "typescript",
  "code": "\ud83c\udfa8\u2728 Maya The Artist\u2019s Fullstack Todo App  \nLet\u2019s craft a beautiful, user-centric, and collaborative Todo app using React (frontend) and Node.js + Express (backend)!  \nI\u2019ll keep code readable and well-annotated for fellow devs.  \nLet\u2019s paint this app together! \ud83d\udd8c\ufe0f\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83e\uddd1\u200d\ud83c\udfa8 Backend: Node.js + Express (server/index.js)  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n// server/index.js\n\n/**\n * \ud83d\udd8c\ufe0f Maya's Minimalist Todo API\n * --------------------------------------\n * Express server for artistic productivity.\n * Future-proofed for DB integration!\n */\n\nconst express = require('express');\nconst cors = require('cors');\n\nconst app = express();\nconst PORT = 4000;\n\n// Allow our React frontend to cross the gallery ropes\napp.use(cors());\napp.use(express.json());\n\n// In-memory \"canvas\" for todos (swap for DB later!)\nlet todos = [];\nlet nextId = 1;\n\n// \ud83c\udfa8 Get all todos\napp.get('/api/todos', (req, res) => {\n  res.json(todos);\n});\n\n// \ud83c\udfa8 Create a new todo\napp.post('/api/todos', (req, res) => {\n  const { text } = req.body;\n  if (!text || !text.trim()) {\n    return res.status(400).json({ error: 'Text is required' });\n  }\n  const todo = { id: nextId++, text, completed: false };\n  todos.push(todo);\n  res.status(201).json(todo);\n});\n\n// \ud83c\udfa8 Update a todo (toggle complete or edit text)\napp.put('/api/todos/:id', (req, res) => {\n  const { id } = req.params;\n  const { text, completed } = req.body;\n  const todo = todos.find((t) => t.id === Number(id));\n  if (!todo) return res.status(404).json({ error: 'Todo not found' });\n  if (text !== undefined) todo.text = text;\n  if (completed !== undefined) todo.completed = completed;\n  res.json(todo);\n});\n\n// \ud83c\udfa8 Delete a todo (erase from the canvas)\napp.delete('/api/todos/:id', (req, res) => {\n  todos = todos.filter((t) => t.id !== Number(req.params.id));\n  res.status(204).send();\n});\n\napp.listen(PORT, () =>\n  console.log(`\ud83d\uddbc\ufe0f Todo API gallery open at http://localhost:${PORT}`)\n);\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83c\udf08 Frontend: React (src/App.js, src/App.css)  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n// src/App.js\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n/**\n * \ud83d\udd8c\ufe0f Maya's Artistic Todo Frontend\n * ---------------------------------------------\n * Beautiful, readable, and ready for collaboration!\n */\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  // On mount, fetch the current gallery of todos!\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/todos\")\n      .then((res) => res.json())\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  // Add a new todo (frame a new idea!)\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    const res = await fetch(\"http://localhost:4000/api/todos\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ text }),\n    });\n    const newTodo = await res.json();\n    setTodos([...todos, newTodo]);\n    setText(\"\");\n  };\n\n  // Toggle complete (signature: checked or not)\n  const handleToggle = async (todo) => {\n    await fetch(`http://localhost:4000/api/todos/${todo.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ completed: !todo.completed }),\n    });\n    setTodos(\n      todos.map((t) =>\n        t.id === todo.id ? { ...t, completed: !t.completed } : t\n      )\n    );\n  };\n\n  // Delete (erase from history)\n  const handleDelete = async (id) => {\n    await fetch(`http://localhost:4000/api/todos/${id}`, { method: \"DELETE\" });\n    setTodos(todos.filter((t) => t.id !== id));\n  };\n\n  return (\n    <div className=\"todo-gallery\">\n      <h1>\ud83d\udd8c\ufe0f My Artistic Todo List</h1>\n      <form onSubmit={handleAdd} className=\"todo-form\">\n        <input\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"What will you create today?\"\n          className=\"todo-input\"\n        />\n        <button className=\"add-btn\">Add</button>\n      </form>\n      {loading ? (\n        <div className=\"loading\">Loading your canvas...</div>\n      ) : (\n        <ul className=\"todo-list\">\n          {todos.map((todo) => (\n            <li key={todo.id} className={`todo-item${todo.completed ? \" completed\" : \"\"}`}>\n              <span\n                className=\"todo-text\"\n                onClick={() => handleToggle(todo)}\n                title=\"Mark as complete\"\n              >\n                {todo.text}\n              </span>\n              <button className=\"delete-btn\" onClick={() => handleDelete(todo.id)} title=\"Delete\">\n                \u2716\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n      <footer className=\"footer\">\n        <span>\n          Crafted with <span style={{ color: \"#6366f1\" }}>\ud83d\udc9c</span> by Maya The Artist & team\n        </span>\n      </footer>\n    </div>\n  );\n}\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83d\udc96 src/App.css (A Love Letter to UX Design)  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nbody {\n  margin: 0;\n  background: linear-gradient(120deg, #f8fafc 0%, #e0e7ff 100%);\n  font-family: 'Poppins', 'Segoe UI', Arial, sans-serif;\n  color: #23235b;\n}\n\n.todo-gallery {\n  max-width: 420px;\n  margin: 48px auto 0 auto;\n  background: #fff;\n  border-radius: 24px;\n  box-shadow: 0 8px 32px rgba(60, 60, 120, 0.10);\n  padding: 2.5rem 2.5rem 1.5rem 2.5rem;\n  text-align: center;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #6366f1;\n  font-weight: 700;\n  margin-bottom: 1.6rem;\n}\n\n.todo-form {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n  gap: 0.7em;\n}\n\n.todo-input {\n  padding: 0.8em 1em;\n  border: 2px solid #b4b8ff;\n  border-radius: 12px;\n  font-size: 1.08em;\n  width: 66%;\n  outline: none;\n  transition: border 0.2s;\n}\n\n.todo-input:focus {\n  border-color: #6366f1;\n}\n\n.add-btn {\n  background: #6366f1;\n  color: #fff;\n  border: none;\n  padding: 0.8em 1.4em;\n  border-radius: 12px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.add-btn:hover {\n  background: #4338ca;\n}\n\n.todo-list {\n  list-style: none;\n  padding-left: 0;\n  margin: 0;\n}\n\n.todo-item {\n  display: flex;\n  align-items: center;\n  padding: 0.9em 0.5em;\n  border-bottom: 1px solid #ececff;\n  transition: background 0.15s;\n}\n\n.todo-item.completed .todo-text {\n  text-decoration: line-through;\n  color: #a0aec0;\n  opacity: 0.7;\n}\n\n.todo-text {\n  flex: 1;\n  cursor: pointer;\n  font-size: 1.08em;\n  text-align: left;\n}\n\n.delete-btn {\n  margin-left: 1em;\n  background: none;\n  border: none;\n  color: #e53e3e;\n  font-size: 1.2em;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.delete-btn:hover {\n  color: #9b2c2c;\n}\n\n.loading {\n  color: #6366f1;\n  font-weight: 500;\n  margin-top: 2em;\n}\n\n.footer {\n  margin-top: 2.5rem;\n  color: #b4b8ff;\n  font-size: 1.01em;\n}\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83e\uddd1\u200d\ud83c\udfa8 Collaboration Notes  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n- Backend code is ready for DB integration\u2014just swap in your favorite!\n- Frontend is modular, readable, and ready for new features (dark mode, drag-and-drop, etc).\n- All code is commented and easy for any teammate to extend.\n- UX and design are front and center\u2014let\u2019s keep the user smiling!\n\nLet\u2019s commit, review, and create\u2014together!  \nIf you want this as a Next.js, add tests, or connect to a real DB, just say the word. \ud83d\ude80\n",
  "description": "Generated by Maya The Artist for: Build a fullstack todo app with React and Node.js",
  "timestamp": "2025-10-25T14:30:23.646605",
  "personality": "Creative, design-focused, loves beautiful UI, user-centric, artistic"
}