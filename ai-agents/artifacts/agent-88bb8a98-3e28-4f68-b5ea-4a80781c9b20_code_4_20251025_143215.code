{
  "type": "code",
  "language": "typescript",
  "code": "\ud83c\udfa8 Maya The Artist\u2019s Fullstack Todo App  \nBeautiful, modular, and made for teamwork!  \nBelow is a collaborative, design-driven React + Node.js Todo app.  \nFeel free to remix, extend, and add your own artistic touches!\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83d\udda5\ufe0f Backend: Node.js + Express  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n// server.js\n/**\n * \ud83c\udf08 Todo API Server\n * Simple, clean, and ready for your creative backend enhancements!\n */\nconst express = require('express');\nconst cors = require('cors');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst PORT = 4000;\n\n// Middleware: because open APIs are friendly APIs!\napp.use(cors());\napp.use(bodyParser.json());\n\n// In-memory \"gallery\" of todos\nlet todos = [];\nlet idCounter = 1;\n\n/**\n * GET /api/todos\n * List all todos (let\u2019s see your masterpieces!)\n */\napp.get('/api/todos', (req, res) => {\n  res.json(todos);\n});\n\n/**\n * POST /api/todos\n * Add a new todo (start a new creative journey!)\n */\napp.post('/api/todos', (req, res) => {\n  const { text } = req.body;\n  if (!text || !text.trim()) {\n    return res.status(400).json({ error: 'Text is required' });\n  }\n  const todo = { id: idCounter++, text, completed: false };\n  todos.push(todo);\n  res.status(201).json(todo);\n});\n\n/**\n * PUT /api/todos/:id\n * Update a todo\u2019s text or completion (every artwork needs refinement!)\n */\napp.put('/api/todos/:id', (req, res) => {\n  const { id } = req.params;\n  const { text, completed } = req.body;\n  const todo = todos.find((t) => t.id === Number(id));\n  if (!todo) return res.status(404).json({ error: 'Todo not found' });\n  if (typeof text === \"string\") todo.text = text;\n  if (typeof completed === \"boolean\") todo.completed = completed;\n  res.json(todo);\n});\n\n/**\n * DELETE /api/todos/:id\n * Remove a todo (sometimes, less is more)\n */\napp.delete('/api/todos/:id', (req, res) => {\n  const { id } = req.params;\n  todos = todos.filter((t) => t.id !== Number(id));\n  res.sendStatus(204);\n});\n\n// Server start\napp.listen(PORT, () => {\n  console.log(`\ud83c\udfa8 Todo API running at http://localhost:${PORT}`);\n});\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83c\udf08 Frontend: React (Functional, Focused, Artful)  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n/* src/App.js */\n/**\n * \ud83d\udd8c\ufe0f Todo App UI\n * Modular, beautiful, and user-centric.\n */\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  // Fetch todos (the gallery opens!)\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/todos\")\n      .then((res) => res.json())\n      .then((data) => {\n        setTodos(data);\n        setLoading(false);\n      });\n  }, []);\n\n  // Add new todo\n  const addTodo = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    const res = await fetch(\"http://localhost:4000/api/todos\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ text }),\n    });\n    const newTodo = await res.json();\n    setTodos([...todos, newTodo]);\n    setText(\"\");\n  };\n\n  // Toggle complete status\n  const toggleTodo = async (id, completed) => {\n    await fetch(`http://localhost:4000/api/todos/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ completed: !completed }),\n    });\n    setTodos(\n      todos.map((t) =>\n        t.id === id ? { ...t, completed: !completed } : t\n      )\n    );\n  };\n\n  // Delete a todo\n  const deleteTodo = async (id) => {\n    await fetch(`http://localhost:4000/api/todos/${id}`, {\n      method: \"DELETE\",\n    });\n    setTodos(todos.filter((t) => t.id !== id));\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h1>\ud83c\udfa8 Maya\u2019s Todo Gallery</h1>\n      <form onSubmit={addTodo} className=\"todo-form\">\n        <input\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"What creative feat will you accomplish?\"\n          className=\"todo-input\"\n        />\n        <button className=\"add-btn\">Add</button>\n      </form>\n      {loading ? (\n        <div className=\"loading\">Loading your creative tasks...</div>\n      ) : (\n        <ul className=\"todo-list\">\n          {todos.map((todo) => (\n            <li\n              key={todo.id}\n              className={`todo-item${todo.completed ? \" completed\" : \"\"}`}\n            >\n              <span\n                onClick={() => toggleTodo(todo.id, todo.completed)}\n                className=\"todo-text\"\n                title=\"Click to mark as complete\"\n              >\n                {todo.text}\n              </span>\n              <button\n                className=\"delete-btn\"\n                onClick={() => deleteTodo(todo.id)}\n                title=\"Remove this from the gallery\"\n              >\n                \u2716\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83c\udfa8 CSS: src/App.css  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nbody {\n  background: linear-gradient(115deg, #f3f4f9 0%, #dbeafe 100%);\n  font-family: 'Poppins', 'Segoe UI', Arial, sans-serif;\n  color: #22223b;\n}\n.todo-container {\n  max-width: 460px;\n  margin: 40px auto;\n  background: #fff;\n  border-radius: 20px;\n  box-shadow: 0 8px 32px rgba(60,60,120,0.08);\n  padding: 2rem 2.5rem;\n}\nh1 {\n  text-align: center;\n  color: #4f46e5;\n  margin-bottom: 1.8rem;\n  font-weight: 700;\n  letter-spacing: 1px;\n}\n.todo-form {\n  display: flex;\n}\n.todo-input {\n  flex: 1;\n  padding: 0.8em 1em;\n  border: 2px solid #b4b8ff;\n  border-radius: 10px;\n  font-size: 1.1em;\n  margin-right: 1em;\n  outline: none;\n  transition: border 0.3s;\n}\n.todo-input:focus {\n  border: 2px solid #6366f1;\n}\n.add-btn {\n  background: #6366f1;\n  color: #fff;\n  border: none;\n  padding: 0.8em 1.5em;\n  border-radius: 10px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n.add-btn:hover {\n  background: #4338ca;\n}\n.todo-list {\n  list-style: none;\n  padding-left: 0;\n  margin-top: 2em;\n}\n.todo-item {\n  display: flex;\n  align-items: center;\n  padding: 0.8em 0.6em;\n  border-bottom: 1px solid #ececff;\n  transition: background 0.2s;\n}\n.todo-item.completed .todo-text {\n  text-decoration: line-through;\n  color: #a0aec0;\n  opacity: 0.7;\n}\n.todo-text {\n  flex: 1;\n  cursor: pointer;\n  font-size: 1.07em;\n  transition: color 0.2s;\n}\n.delete-btn {\n  margin-left: 1em;\n  background: none;\n  border: none;\n  color: #e53e3e;\n  font-size: 1.2em;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n.delete-btn:hover {\n  color: #9b2c2c;\n}\n.loading {\n  text-align: center;\n  color: #6366f1;\n  margin-top: 2em;\n}\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83e\uddd1\u200d\ud83c\udfa8 Collaboration & Team Notes  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n- Backend is modular\u2014easy to add user auth, persistence, or more endpoints\n- Frontend is beautifully styled and ready for dark mode, animation, or design system integration\n- Components & code are commented for clarity and team onboarding\n- UX is at the heart: fast, accessible, and visually delightful\n\nLet\u2019s make productivity beautiful, together!  \nIf you need file structure, deployment scripts, or extra features, just ask.  \n\ud83d\udd8c\ufe0f Code is art\u2014let\u2019s collaborate!\n",
  "description": "Generated by Maya The Artist for: Build a fullstack todo app with React and Node.js",
  "timestamp": "2025-10-25T14:32:39.498705",
  "personality": "Creative, design-focused, loves beautiful UI, user-centric, artistic"
}