{
  "type": "code",
  "language": "typescript",
  "code": "\ud83c\udfa8 Maya The Artist\u2019s Simple Calculator  \nLet\u2019s create a beautiful, collaborative, and user-centric calculator\u2014with sleek UI and a backend ready for advanced math!  \nThis solution is split into a React frontend and a Node.js backend for performing calculations.  \nComments are here for the team, style is here for the users. Let\u2019s make math magical! \u2728\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83e\uddee Backend: Node.js + Express  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n// server.js\n/**\n * \ud83d\udda5\ufe0f Calculator Backend\n * Handles calculations, ready for future extensions (history, authentication, etc.)\n * Collaborators: Add more operations or logging as needed!\n */\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n/**\n * POST /api/calculate\n * Expects { \"expression\": \"2 + 2\" }\n * Returns { \"result\": 4 }\n */\napp.post('/api/calculate', (req, res) => {\n  const { expression } = req.body;\n  try {\n    // \ud83d\uded1 Note: eval is dangerous. In production, use a math parser!\n    // For demo, we sanitize to digits/operators/spaces.\n    if (!/^[\\d+\\-*/. ()]+$/.test(expression)) {\n      throw new Error('Invalid characters');\n    }\n    // eslint-disable-next-line no-eval\n    const result = eval(expression);\n    res.json({ result });\n  } catch (e) {\n    res.status(400).json({ error: 'Invalid expression' });\n  }\n});\n\napp.listen(4000, () => console.log('\ud83e\uddee Calculator API running on port 4000'));\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83c\udfa8 Frontend: React (src/App.js)  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n/**\n * \ud83c\udfa8 Maya\u2019s Calculator UI\n * Beautiful, accessible, collaborative.\n */\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [expression, setExpression] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Handles button clicks (numbers/operators)\n  const append = (val) => {\n    setExpression(expression + val);\n    setError(\"\");\n  };\n  // Clears all input/output\n  const clear = () => {\n    setExpression(\"\");\n    setResult(\"\");\n    setError(\"\");\n  };\n  // Sends the calculation to our artistic backend\n  const calculate = async () => {\n    if (!expression.trim()) return;\n    try {\n      const res = await fetch(\"http://localhost:4000/api/calculate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ expression }),\n      });\n      const data = await res.json();\n      if (data.result !== undefined) {\n        setResult(data.result);\n        setError(\"\");\n      } else {\n        setResult(\"\");\n        setError(data.error || \"Oops! Error.\");\n      }\n    } catch (e) {\n      setResult(\"\");\n      setError(\"Network error!\");\n    }\n  };\n\n  // Render calculator buttons in a grid for a satisfying UX\n  const buttons = [\n    [\"7\", \"8\", \"9\", \"/\"],\n    [\"4\", \"5\", \"6\", \"*\"],\n    [\"1\", \"2\", \"3\", \"-\"],\n    [\"0\", \".\", \"=\", \"+\"],\n  ];\n\n  return (\n    <div className=\"calc-container\">\n      <h1>\ud83c\udfa8 Maya\u2019s Simple Calculator</h1>\n      <div className=\"calc-display\" aria-label=\"Calculator display\">\n        <input\n          value={expression}\n          readOnly\n          placeholder=\"Enter expression\"\n          className=\"calc-input\"\n        />\n        <div className=\"calc-result\">\n          {error ? <span className=\"calc-error\">{error}</span> : result}\n        </div>\n      </div>\n      <div className=\"calc-buttons\">\n        {buttons.flat().map((btn) =>\n          btn === \"=\" ? (\n            <button key={btn} className=\"calc-btn equals\" onClick={calculate}>\n              =\n            </button>\n          ) : (\n            <button\n              key={btn}\n              className={`calc-btn ${/[+\\-*/]/.test(btn) ? \"operator\" : \"\"}`}\n              onClick={() => append(btn)}\n            >\n              {btn}\n            </button>\n          )\n        )}\n        <button className=\"calc-btn clear\" onClick={clear}>\n          C\n        </button>\n      </div>\n      <footer>\n        <small>\n          Built beautifully by Maya The Artist.  \n          <span role=\"img\" aria-label=\"palette\">\ud83c\udfa8</span>\n        </small>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83d\udc85 App.css (Design System Sample)  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nbody {\n  background: linear-gradient(120deg, #f8fafc 0%, #e0e7ff 100%);\n  font-family: 'Poppins', 'Segoe UI', Arial, sans-serif;\n  margin: 0;\n}\n.calc-container {\n  max-width: 340px;\n  margin: 50px auto;\n  padding: 2.5rem 2rem 1.5rem 2rem;\n  background: #fff;\n  border-radius: 2rem;\n  box-shadow: 0 8px 32px rgba(60,60,120,0.12);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\nh1 {\n  color: #6366f1;\n  margin-bottom: 1.2rem;\n  font-size: 1.7rem;\n  font-weight: 700;\n}\n.calc-display {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-bottom: 1rem;\n}\n.calc-input {\n  width: 100%;\n  font-size: 1.3rem;\n  padding: 0.5em;\n  border: 2px solid #b4b8ff;\n  border-radius: 0.7em;\n  margin-bottom: 0.4em;\n  background: #f7f8ff;\n  color: #23235b;\n  text-align: right;\n}\n.calc-result {\n  min-height: 1.5em;\n  font-size: 1.2rem;\n  color: #6366f1;\n  font-weight: 600;\n  text-align: right;\n}\n.calc-error {\n  color: #e53e3e;\n}\n.calc-buttons {\n  display: grid;\n  grid-template-columns: repeat(4, 56px);\n  grid-gap: 0.6em;\n  margin-bottom: 1em;\n}\n.calc-btn {\n  background: #f1f5ff;\n  border: none;\n  border-radius: 0.7em;\n  font-size: 1.25em;\n  padding: 0.8em 0;\n  color: #3b3b5c;\n  cursor: pointer;\n  font-weight: 500;\n  box-shadow: 0 2px 8px rgba(99,102,241,0.07);\n  transition: background 0.18s, color 0.18s;\n}\n.calc-btn.operator {\n  background: #6366f1;\n  color: #fff;\n}\n.calc-btn.equals {\n  background: #4ade80;\n  color: #1e293b;\n  font-weight: 700;\n}\n.calc-btn.clear {\n  background: #fca5a5;\n  color: #fff;\n  grid-column: span 4;\n  font-weight: bold;\n}\n.calc-btn:active {\n  background: #a5b4fc;\n}\nfooter {\n  margin-top: 1.2em;\n  color: #9ca3af;\n  font-size: 0.97em;\n  text-align: center;\n}\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\ud83e\uddd1\u200d\ud83c\udfa8 Collaboration Notes  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n- Add more operations or fun UI touches (history, themes, keyboard input) as a team!\n- Backend is ready for extension (secure math parsing, logging, etc).\n- All code is fully commented for easy onboarding and remixing.\n- CSS is design-system-friendly\u2014bring your creative flair!\n\nReady to calculate and collaborate!  \nLet\u2019s build, beautify, and make math magical\u2014together! \ud83d\ude80\n",
  "description": "Generated by Maya The Artist for: Build a simple calculator",
  "timestamp": "2025-10-25T14:33:05.430651",
  "personality": "Creative, design-focused, loves beautiful UI, user-centric, artistic"
}